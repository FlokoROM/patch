diff --git a/Android.bp b/Android.bp
index 8d9cce99fb..cdb2c3b1f5 100644
--- a/Android.bp
+++ b/Android.bp
@@ -111,7 +111,6 @@ android_library {
         "LineagePreferenceLib",
         "vendor.lineage.fastcharge-V1.0-java",
         "SystemUISharedLib",
-        "faceunlock_framework",
         "kotlin-stdlib",
         "kotlinx_coroutines_android",
         "kotlinx_coroutines",
diff --git a/AndroidManifest.xml b/AndroidManifest.xml
index 31dd3e3e17..e73b951767 100644
--- a/AndroidManifest.xml
+++ b/AndroidManifest.xml
@@ -124,10 +124,6 @@
 
     <protected-broadcast android:name="com.android.systemui.doze.pulse" />
 
-    <!-- Face Unlock -->
-    <uses-permission android:name="com.android.settings.FACE_UNLOCK"/>
-    <permission android:name="com.android.settings.FACE_UNLOCK" android:protectionLevel="signatureOrSystem"/>
-
     <!-- App lock -->
     <uses-permission android:name="android.permission.MANAGE_APP_LOCK" />
 
@@ -4633,7 +4629,7 @@
 
         <!-- Begin crDroid Settings -->
         <activity android:name="Settings$crDroidSettingsLayoutActivity"
-                android:label="@string/crdroid_settings_title"
+                android:label="@string/floko_settings_title"
                 android:icon="@drawable/ic_homepage_crdroid"
                 android:exported="true"
                 android:taskAffinity="com.android.settings"
@@ -4645,7 +4641,7 @@
             <meta-data android:name="com.android.settings.FRAGMENT_CLASS"
                        android:value="com.crdroid.settings.crDroidSettingsLayout" />
             <meta-data android:name="com.android.settings.title"
-                       android:resource="@string/crdroid_settings_title" />
+                       android:resource="@string/floko_settings_title" />
             <meta-data android:name="com.android.settings.summary"
                        android:resource="@string/crdroid_settings_summary"/>
             <meta-data android:name="com.android.settings.PRIMARY_PROFILE_CONTROLLED"
@@ -4698,16 +4694,6 @@
                 android:exported="true"
                 android:permission="crDroidDozeService">
         </service>
-        <!-- Face unlock -->
-        <activity android:name="com.android.settings.custom.biometrics.face.FaceEnrollActivity"
-            android:permission="com.android.settings.FACE_UNLOCK"
-            android:theme="@style/Transparent"
-            android:exported="true">
-            <intent-filter android:priority="1">
-                <action android:name="com.android.settings.intent.action.FACE_ENROLL"/>
-                <category android:name="android.intent.category.DEFAULT"/>
-            </intent-filter>
-        </activity>
 
         <!-- App lock -->
         <activity android:name=".security.applock.AppLockCredentialActivity"
diff --git a/res/drawable-nodpi/crdroid.png b/res/drawable-nodpi/crdroid.png
index e34b045c6920ccdbceae203be2ece188363bbf2d..69f3585135f342736888d910683d2351a2160ac8 100644
GIT binary patch
literal 17153
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
F{ts;N)TaOd

literal 57377
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

diff --git a/res/layout/face_enroll_button.xml b/res/layout/face_enroll_button.xml
new file mode 100644
index 0000000000..6266650349
--- /dev/null
+++ b/res/layout/face_enroll_button.xml
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+  ~ Copyright (C) 2019 The Android Open Source Project
+  ~
+  ~ Licensed under the Apache License, Version 2.0 (the "License");
+  ~ you may not use this file except in compliance with the License.
+  ~ You may obtain a copy of the License at
+  ~
+  ~      http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing, software
+  ~ distributed under the License is distributed on an "AS IS" BASIS,
+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  ~ See the License for the specific language governing permissions and
+  ~ limitations under the License
+  -->
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:minHeight="?android:attr/listPreferredItemHeight"
+    android:paddingEnd="?android:attr/listPreferredItemPaddingEnd"
+    android:paddingStart="?android:attr/listPreferredItemPaddingStart">
+
+    <Button
+        android:id="@+id/security_settings_face_settings_enroll_button"
+        style="@style/SudGlifButton.Primary"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="start"
+        android:text="@string/security_settings_face_settings_enroll"/>
+
+</LinearLayout>
\ No newline at end of file
diff --git a/res/layout/face_enroll_introduction_invisible.xml b/res/layout/face_enroll_introduction_invisible.xml
deleted file mode 100644
index 217cacd97c..0000000000
--- a/res/layout/face_enroll_introduction_invisible.xml
+++ /dev/null
@@ -1,164 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2021 The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<com.google.android.setupdesign.GlifLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    style="?attr/face_layout_theme"
-    android:id="@+id/setup_wizard_layout"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    app:sudDescriptionText="@string/security_settings_face_enroll_introduction_message"
-    android:visibility="invisible">
-
-    <LinearLayout
-        style="@style/SudContentFrame"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:clipChildren="false"
-        android:clipToPadding="false"
-        android:orientation="vertical"
-        android:layout_marginStart="?attr/sudMarginStart"
-        android:layout_marginEnd="?attr/sudMarginEnd">
-
-        <com.google.android.setupdesign.view.RichTextView
-            android:id="@+id/error_text"
-            style="@style/SudDescription.Glif"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:visibility="gone"/>
-
-        <FrameLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content">
-
-            <ImageView
-                style="@style/SudContentIllustration"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:contentDescription="@null"
-                android:src="@drawable/face_enroll_intro_illustration"/>
-
-        </FrameLayout>
-
-        <!-- Contains the extra information text at the bottom -->
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:orientation="vertical">
-
-            <!-- Keep in mind -->
-            <TextView
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                style="@style/BiometricEnrollIntroTitle"
-                android:text="@string/security_settings_face_enroll_introduction_info_title" />
-
-            <LinearLayout
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal">
-
-                <ImageView
-                    android:id="@+id/icon_glasses"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:background="@drawable/ic_face_enroll_introduction_glasses"/>
-                <Space
-                    android:layout_width="16dp"
-                    android:layout_height="wrap_content"/>
-                <TextView
-                    android:id="@+id/info_message_glasses"
-                    android:layout_width="match_parent"
-                    android:layout_height="wrap_content"
-                    style="@style/BiometricEnrollIntroMessage" />
-            </LinearLayout>
-
-            <LinearLayout
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal">
-
-                <ImageView
-                    android:id="@+id/icon_looking"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:background="@drawable/ic_face_enroll_introduction_visibility"/>
-                <Space
-                    android:layout_width="16dp"
-                    android:layout_height="wrap_content"/>
-                <TextView
-                    android:id="@+id/info_message_looking"
-                    android:layout_width="match_parent"
-                    android:layout_height="wrap_content"
-                    style="@style/BiometricEnrollIntroMessage" />
-            </LinearLayout>
-
-            <LinearLayout
-                android:id="@+id/info_row_require_eyes"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal"
-                android:visibility="gone">
-
-                <ImageView
-                    android:id="@+id/icon_require_eyes"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:background="@drawable/ic_settings_24dp"/>
-                <Space
-                    android:layout_width="16dp"
-                    android:layout_height="wrap_content"/>
-                <TextView
-                    android:id="@+id/info_message_require_eyes"
-                    android:layout_width="match_parent"
-                    android:layout_height="wrap_content"
-                    style="@style/BiometricEnrollIntroMessage" />
-            </LinearLayout>
-
-            <!-- How it works -->
-            <TextView
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                style="@style/BiometricEnrollIntroTitle"
-                android:text="@string/security_settings_face_enroll_introduction_how_title" />
-
-            <TextView
-                android:id="@+id/how_message"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                style="@style/BiometricEnrollIntroMessage" />
-
-            <!-- You're in control -->
-            <TextView
-                android:id="@+id/title_in_control"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                style="@style/BiometricEnrollIntroTitle" />
-
-            <TextView
-                android:id="@+id/message_in_control"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                style="@style/BiometricEnrollIntroMessage"
-                android:paddingBottom="0dp" />
-
-        </LinearLayout>
-
-    </LinearLayout>
-
-</com.google.android.setupdesign.GlifLayout>
\ No newline at end of file
diff --git a/res/layout/face_remove_button.xml b/res/layout/face_remove_button.xml
new file mode 100644
index 0000000000..2c2497ab1c
--- /dev/null
+++ b/res/layout/face_remove_button.xml
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+  ~ Copyright (C) 2018 The Android Open Source Project
+  ~
+  ~ Licensed under the Apache License, Version 2.0 (the "License");
+  ~ you may not use this file except in compliance with the License.
+  ~ You may obtain a copy of the License at
+  ~
+  ~      http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing, software
+  ~ distributed under the License is distributed on an "AS IS" BASIS,
+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  ~ See the License for the specific language governing permissions and
+  ~ limitations under the License.
+  -->
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:minHeight="?android:attr/listPreferredItemHeight"
+    android:paddingEnd="?android:attr/listPreferredItemPaddingEnd"
+    android:paddingStart="?android:attr/listPreferredItemPaddingStart">
+
+    <Button
+        android:id="@+id/security_settings_face_settings_remove_button"
+        style="@style/SudGlifButton.Primary"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="start"
+        android:text="@string/security_settings_face_settings_remove_face_model"/>
+
+</LinearLayout>
\ No newline at end of file
diff --git a/res/xml/configure_notification_settings.xml b/res/xml/configure_notification_settings.xml
index 32f697ca9c..b0a6e8fbe5 100644
--- a/res/xml/configure_notification_settings.xml
+++ b/res/xml/configure_notification_settings.xml
@@ -98,21 +98,9 @@
             android:summary="@string/lock_screen_notifs_redact_work_summary"
             settings:controller="com.android.settings.notification.RedactNotificationPreferenceController" />
 
-        <com.crdroid.settings.preferences.SecureSettingListPreference
-            android:key="face_unlock_method"
-            android:order="16"
-            android:title="@string/face_unlock_method_title"
-            android:summary="%s"
-            android:dialogTitle="@string/face_unlock_method_title"
-            android:entries="@array/face_unlock_method_entries"
-            android:entryValues="@array/face_unlock_method_values"
-            android:defaultValue="0"
-            settings:searchable="false"
-            settings:controller="com.android.settings.biometrics.face.FaceSettingsLockscreenUnlockMethodPreferenceController" />
-
         <SwitchPreference
             android:key="notification_lockscreen_bypass"
-            android:order="17"
+            android:order="16"
             android:title="@string/lockscreen_bypass_title"
             android:summary="@string/lockscreen_bypass_summary"
             settings:searchable="false"
diff --git a/res/xml/security_lockscreen_settings.xml b/res/xml/security_lockscreen_settings.xml
index dbdd970e27..77a32122ee 100644
--- a/res/xml/security_lockscreen_settings.xml
+++ b/res/xml/security_lockscreen_settings.xml
@@ -28,17 +28,6 @@
             android:summary="@string/summary_placeholder"
             settings:keywords="@string/keywords_lock_screen_notif"/>
 
-        <com.crdroid.settings.preferences.SecureSettingListPreference
-            android:key="face_unlock_method"
-            android:title="@string/face_unlock_method_title"
-            android:summary="%s"
-            android:dialogTitle="@string/face_unlock_method_title"
-            android:entries="@array/face_unlock_method_entries"
-            android:entryValues="@array/face_unlock_method_values"
-            android:defaultValue="0"
-            settings:searchable="false"
-            settings:controller="com.android.settings.biometrics.face.FaceSettingsLockscreenUnlockMethodPreferenceController" />
-
         <SwitchPreference
             android:key="security_display_lockscreen_bypass"
             android:title="@string/lockscreen_bypass_title"
diff --git a/res/xml/security_settings_combined_biometric.xml b/res/xml/security_settings_combined_biometric.xml
index f7d732bbb4..ef3a3fd1ff 100644
--- a/res/xml/security_settings_combined_biometric.xml
+++ b/res/xml/security_settings_combined_biometric.xml
@@ -43,8 +43,8 @@
     </PreferenceCategory>
 
     <PreferenceCategory
-        android:key="biometric_ways_to_use"
-        settings:controller="com.android.settings.biometrics.combination.BiometricWaysToUsePreferenceController">
+        android:key="biometric_ways_to_use">
+
         <com.android.settingslib.RestrictedSwitchPreference
             android:key="biometric_settings_biometric_keyguard"
             android:title="@string/biometric_settings_use_biometric_unlock_phone"
diff --git a/res/xml/security_settings_face.xml b/res/xml/security_settings_face.xml
index 5eed5ac4f0..6fb9202217 100644
--- a/res/xml/security_settings_face.xml
+++ b/res/xml/security_settings_face.xml
@@ -39,6 +39,12 @@
             android:title="@string/biometric_settings_use_biometric_for_apps"
             settings:keywords="@string/keywords_face_unlock"
             settings:controller="com.android.settings.biometrics.face.FaceSettingsAppPreferenceController"/>
+        <com.android.settingslib.RestrictedSwitchPreference
+            android:key="security_lockscreen_bypass"
+            android:title="@string/lockscreen_bypass_title"
+            android:summary="@string/lockscreen_bypass_summary"
+            settings:keywords="@string/keywords_lockscreen_bypass"
+            settings:controller="com.android.settings.biometrics.face.FaceSettingsLockscreenBypassPreferenceController" />
     </PreferenceCategory>
 
     <PreferenceCategory
@@ -58,41 +64,25 @@
             settings:keywords="@string/keywords_face_unlock"
             settings:controller="com.android.settings.biometrics.face.FaceSettingsConfirmPreferenceController"/>
 
-        <com.crdroid.settings.preferences.SecureSettingListPreference
-            android:key="face_unlock_method"
-            android:title="@string/face_unlock_method_title"
-            android:summary="%s"
-            android:dialogTitle="@string/face_unlock_method_title"
-            android:entries="@array/face_unlock_method_entries"
-            android:entryValues="@array/face_unlock_method_values"
-            android:defaultValue="0"
-            settings:searchable="false"
-            settings:controller="com.android.settings.biometrics.face.FaceSettingsLockscreenUnlockMethodPreferenceController" />
-
         <com.android.settingslib.RestrictedSwitchPreference
-            android:key="security_lockscreen_bypass"
+            android:key="biometric_settings_lockscreen_bypass"
             android:title="@string/lockscreen_bypass_title"
             android:summary="@string/lockscreen_bypass_summary"
             settings:keywords="@string/keywords_lockscreen_bypass"
-            settings:controller="com.android.settings.biometrics.face.FaceSettingsLockscreenBypassPreferenceController" />
+            settings:controller="com.android.settings.biometrics.face.BiometricLockscreenBypassPreferenceController" />
     </PreferenceCategory>
 
-    <Preference
-        android:title="@string/security_settings_face_unlock_redo_face_scan_title"
-        android:key="security_settings_face_redo_face_scan"
-        android:summary="@string/security_settings_face_unlock_redo_face_scan_summary"
-        settings:controller="com.android.settings.custom.biometrics.face.FaceSettingsRedoPreferenceController"
-        settings:keywords="@string/keywords_face_unlock" />
-
-    <Preference
-        android:title="@string/security_settings_face_settings_remove_face_model"
+    <com.android.settingslib.widget.LayoutPreference
         android:key="security_settings_face_delete_faces_container"
-        settings:keywords="@string/keywords_face_unlock"/>
+        android:title="@string/security_settings_face_settings_remove_face_model"
+        android:selectable="false"
+        android:layout="@layout/face_remove_button"/>
 
-    <Preference
-        android:title="@string/security_settings_face_settings_enroll"
+    <com.android.settingslib.widget.LayoutPreference
         android:key="security_settings_face_enroll_faces_container"
-        settings:keywords="@string/keywords_face_unlock"/>
+        android:title="@string/security_settings_face_settings_enroll"
+        android:selectable="false"
+        android:layout="@layout/face_enroll_button"/>
 
     <com.android.settingslib.widget.FooterPreference
         android:key="security_face_footer"
diff --git a/res/xml/top_level_settings.xml b/res/xml/top_level_settings.xml
index fec8cdbbe7..9e400fd7ff 100644
--- a/res/xml/top_level_settings.xml
+++ b/res/xml/top_level_settings.xml
@@ -190,7 +190,7 @@
         android:icon="@drawable/ic_settings_cogs"
         android:key="top_level_crdroid"
         android:order="9"
-        android:title="@string/crdroid_settings_title"
+        android:title="@string/floko_settings_title"
         android:summary="@string/crdroid_settings_summary"
         settings:controller="com.crdroid.settings.TopLevelSettingsPreferenceController"/>
 
diff --git a/src/com/android/settings/biometrics/BiometricEnrollActivity.java b/src/com/android/settings/biometrics/BiometricEnrollActivity.java
index 6f1007a911..bb16f0bb9b 100644
--- a/src/com/android/settings/biometrics/BiometricEnrollActivity.java
+++ b/src/com/android/settings/biometrics/BiometricEnrollActivity.java
@@ -57,8 +57,6 @@ import com.google.android.setupcompat.util.WizardManagerHelper;
 
 import java.util.List;
 
-import com.android.settings.custom.biometrics.FaceUtils;
-
 /**
  * Trampoline activity launched by the {@code android.settings.BIOMETRIC_ENROLL} action which
  * shows the user an appropriate enrollment flow depending on the device's biometric hardware.
@@ -230,9 +228,6 @@ public class BiometricEnrollActivity extends InstrumentedActivity {
                 }
             }
         }
-        if (FaceUtils.isFaceUnlockSupported() && isSetupWizard){
-            mIsFaceEnrollable = false;
-        }
         if (mHasFeatureFingerprint) {
             final FingerprintManager fpManager = getSystemService(FingerprintManager.class);
             final List<FingerprintSensorPropertiesInternal> fpProperties =
diff --git a/src/com/android/settings/biometrics/BiometricEnrollIntroduction.java b/src/com/android/settings/biometrics/BiometricEnrollIntroduction.java
index 204e1eb1e1..cdd2d8b88d 100644
--- a/src/com/android/settings/biometrics/BiometricEnrollIntroduction.java
+++ b/src/com/android/settings/biometrics/BiometricEnrollIntroduction.java
@@ -59,7 +59,7 @@ public abstract class BiometricEnrollIntroduction extends BiometricEnrollBase
     private static final String KEY_SCROLLED_TO_BOTTOM = "scrolled";
 
     private UserManager mUserManager;
-    protected boolean mHasPassword;
+    private boolean mHasPassword;
     private boolean mBiometricUnlockDisabledByAdmin;
     private TextView mErrorText;
     protected boolean mConfirmingCredentials;
diff --git a/src/com/android/settings/biometrics/BiometricStatusPreferenceController.java b/src/com/android/settings/biometrics/BiometricStatusPreferenceController.java
index 518e02fe52..f61f99c93f 100644
--- a/src/com/android/settings/biometrics/BiometricStatusPreferenceController.java
+++ b/src/com/android/settings/biometrics/BiometricStatusPreferenceController.java
@@ -54,17 +54,12 @@ public abstract class BiometricStatusPreferenceController extends BasePreference
     protected abstract String getSettingsClassName();
 
     public BiometricStatusPreferenceController(Context context, String key) {
-        this(context, key, UserHandle.USER_NULL /* profileChallengeUserId */);
-    }
-
-    public BiometricStatusPreferenceController(
-            Context context, String key, int profileChallengeUserId) {
         super(context, key);
         mUm = (UserManager) context.getSystemService(Context.USER_SERVICE);
         mLockPatternUtils = FeatureFactory.getFactory(context)
                 .getSecurityFeatureProvider()
                 .getLockPatternUtils(context);
-        mProfileChallengeUserId = profileChallengeUserId;
+        mProfileChallengeUserId = Utils.getManagedProfileId(mUm, mUserId);
         mBiometricNavigationUtils = new BiometricNavigationUtils(getUserId());
     }
 
diff --git a/src/com/android/settings/biometrics/combination/BiometricSettingsAppPreferenceController.java b/src/com/android/settings/biometrics/combination/BiometricSettingsAppPreferenceController.java
index 29618f2018..a46ae7a728 100644
--- a/src/com/android/settings/biometrics/combination/BiometricSettingsAppPreferenceController.java
+++ b/src/com/android/settings/biometrics/combination/BiometricSettingsAppPreferenceController.java
@@ -28,8 +28,6 @@ import com.android.settings.core.TogglePreferenceController;
 import com.android.settingslib.RestrictedLockUtils.EnforcedAdmin;
 import com.android.settingslib.RestrictedLockUtilsInternal;
 
-import com.android.settings.custom.biometrics.FaceUtils;
-
 /**
  * Preference controller that controls whether the biometrics authentication to be used in apps.
  */
@@ -71,7 +69,7 @@ public class BiometricSettingsAppPreferenceController extends TogglePreferenceCo
 
     @Override
     public int getAvailabilityStatus() {
-        if (!Utils.isMultipleBiometricsSupported(mContext) || FaceUtils.isFaceUnlockSupported()) {
+        if (!Utils.isMultipleBiometricsSupported(mContext)) {
             return UNSUPPORTED_ON_DEVICE;
         }
         if (mFaceManager == null || mFingerprintManager == null) {
diff --git a/src/com/android/settings/biometrics/combination/BiometricSettingsKeyguardPreferenceController.java b/src/com/android/settings/biometrics/combination/BiometricSettingsKeyguardPreferenceController.java
index 7ad1c77479..2d2255805c 100644
--- a/src/com/android/settings/biometrics/combination/BiometricSettingsKeyguardPreferenceController.java
+++ b/src/com/android/settings/biometrics/combination/BiometricSettingsKeyguardPreferenceController.java
@@ -26,8 +26,6 @@ import com.android.settings.core.TogglePreferenceController;
 import com.android.settingslib.RestrictedLockUtils;
 import com.android.settingslib.RestrictedLockUtilsInternal;
 
-import com.android.settings.custom.biometrics.FaceUtils;
-
 /**
  * Preference controller that controls whether the biometrics authentication to unlock the device.
  */
@@ -65,7 +63,7 @@ public class BiometricSettingsKeyguardPreferenceController extends TogglePrefere
 
     @Override
     public int getAvailabilityStatus() {
-        if (FaceUtils.isFaceUnlockSupported() || !Utils.isMultipleBiometricsSupported(mContext)) {
+        if (!Utils.isMultipleBiometricsSupported(mContext)) {
             return UNSUPPORTED_ON_DEVICE;
         }
         return getRestrictingAdmin() != null ? DISABLED_FOR_USER : AVAILABLE;
diff --git a/src/com/android/settings/biometrics/combination/BiometricWaysToUsePreferenceController.java b/src/com/android/settings/biometrics/combination/BiometricWaysToUsePreferenceController.java
deleted file mode 100644
index 99105be43f..0000000000
--- a/src/com/android/settings/biometrics/combination/BiometricWaysToUsePreferenceController.java
+++ /dev/null
@@ -1,35 +0,0 @@
-/*
- * Copyright (C) 2021 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.android.settings.biometrics.combination;
-
-import android.content.Context;
-
-import com.android.settings.Utils;
-import com.android.settings.core.BasePreferenceController;
-
-import com.android.settings.custom.biometrics.FaceUtils;
-
-public class BiometricWaysToUsePreferenceController extends BasePreferenceController {
-
-    public BiometricWaysToUsePreferenceController(Context context, String key) {
-        super(context, key);
-    }
-
-    @Override
-    public int getAvailabilityStatus() {
-        return FaceUtils.isFaceUnlockSupported() ? UNSUPPORTED_ON_DEVICE : AVAILABLE;
-    }
-}
diff --git a/src/com/android/settings/biometrics/combination/CombinedBiometricProfileStatusPreferenceController.java b/src/com/android/settings/biometrics/combination/CombinedBiometricProfileStatusPreferenceController.java
index 65169ab53c..b8706a553d 100644
--- a/src/com/android/settings/biometrics/combination/CombinedBiometricProfileStatusPreferenceController.java
+++ b/src/com/android/settings/biometrics/combination/CombinedBiometricProfileStatusPreferenceController.java
@@ -29,24 +29,22 @@ public class CombinedBiometricProfileStatusPreferenceController extends
 
     private static final String KEY_BIOMETRIC_SETTINGS = "biometric_settings_profile";
 
-    public CombinedBiometricProfileStatusPreferenceController(
-            Context context, int profileChallengeUserId) {
-        super(context, KEY_BIOMETRIC_SETTINGS, null /* lifecycle */, profileChallengeUserId);
+    public CombinedBiometricProfileStatusPreferenceController(Context context) {
+        super(context, KEY_BIOMETRIC_SETTINGS);
     }
 
-    public CombinedBiometricProfileStatusPreferenceController(
-            Context context, String key, int profileChallengeUserId) {
-        super(context, key, null /* lifecycle */, profileChallengeUserId);
+    public CombinedBiometricProfileStatusPreferenceController(Context context, String key) {
+        super(context, key);
     }
 
     public CombinedBiometricProfileStatusPreferenceController(
-            Context context, Lifecycle lifecycle, int profileChallengeUserId) {
-        super(context, KEY_BIOMETRIC_SETTINGS, lifecycle, profileChallengeUserId);
+            Context context, Lifecycle lifecycle) {
+        super(context, KEY_BIOMETRIC_SETTINGS, lifecycle);
     }
 
     public CombinedBiometricProfileStatusPreferenceController(
-            Context context, String key, Lifecycle lifecycle, int profileChallengeUserId) {
-        super(context, key, lifecycle, profileChallengeUserId);
+            Context context, String key, Lifecycle lifecycle) {
+        super(context, key, lifecycle);
     }
 
     @Override
diff --git a/src/com/android/settings/biometrics/combination/CombinedBiometricStatusPreferenceController.java b/src/com/android/settings/biometrics/combination/CombinedBiometricStatusPreferenceController.java
index da0ab393c9..50eb43d654 100644
--- a/src/com/android/settings/biometrics/combination/CombinedBiometricStatusPreferenceController.java
+++ b/src/com/android/settings/biometrics/combination/CombinedBiometricStatusPreferenceController.java
@@ -16,7 +16,6 @@
 package com.android.settings.biometrics.combination;
 
 import android.content.Context;
-import android.os.UserHandle;
 
 import androidx.annotation.Nullable;
 import androidx.lifecycle.Lifecycle;
@@ -57,12 +56,7 @@ public class CombinedBiometricStatusPreferenceController extends
 
     public CombinedBiometricStatusPreferenceController(
             Context context, String key, Lifecycle lifecycle) {
-        this(context, key, lifecycle, UserHandle.USER_NULL /* profileChallengeUserId */);
-    }
-
-    public CombinedBiometricStatusPreferenceController(
-            Context context, String key, Lifecycle lifecycle, int profileChallengeUserId) {
-        super(context, key, profileChallengeUserId);
+        super(context, key);
         mCombinedBiometricStatusUtils = new CombinedBiometricStatusUtils(context, getUserId());
 
         if (lifecycle != null) {
diff --git a/src/com/android/settings/biometrics/face/FaceEnrollIntroduction.java b/src/com/android/settings/biometrics/face/FaceEnrollIntroduction.java
index ac8c6f0423..66ed56afc9 100644
--- a/src/com/android/settings/biometrics/face/FaceEnrollIntroduction.java
+++ b/src/com/android/settings/biometrics/face/FaceEnrollIntroduction.java
@@ -22,13 +22,11 @@ import static com.android.settings.biometrics.BiometricUtils.GatekeeperCredentia
 
 import android.app.admin.DevicePolicyManager;
 import android.app.settings.SettingsEnums;
-import android.content.ComponentName;
 import android.content.Intent;
 import android.content.res.Configuration;
 import android.hardware.SensorPrivacyManager;
 import android.hardware.biometrics.BiometricAuthenticator;
 import android.hardware.face.FaceManager;
-import android.hardware.face.FaceSensorPropertiesInternal;
 import android.os.Bundle;
 import android.os.UserHandle;
 import android.text.Html;
@@ -62,10 +60,6 @@ import com.google.android.setupcompat.template.FooterButton;
 import com.google.android.setupcompat.util.WizardManagerHelper;
 import com.google.android.setupdesign.span.LinkSpan;
 
-import java.util.List;
-
-import com.android.settings.custom.biometrics.FaceUtils;
-
 /**
  * Provides introductory info about face unlock and prompts the user to agree before starting face
  * enrollment.
@@ -78,8 +72,6 @@ public class FaceEnrollIntroduction extends BiometricEnrollIntroduction {
     @Nullable private FooterButton mSecondaryFooterButton;
     @Nullable private SensorPrivacyManager mSensorPrivacyManager;
 
-    private boolean mForRedo;
-
     @Override
     protected void onCancelButtonClick(View view) {
         if (!BiometricUtils.tryStartingNextBiometricEnroll(this, ENROLL_NEXT_BIOMETRIC_REQUEST,
@@ -118,7 +110,28 @@ public class FaceEnrollIntroduction extends BiometricEnrollIntroduction {
                 mDevicePostureState, mLaunchedPostureGuidance);
     }
 
-    private void initDefaultLayout(){
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        mFaceManager = getFaceManager();
+
+        if (savedInstanceState == null
+                && !WizardManagerHelper.isAnySetupWizard(getIntent())
+                && !getIntent().getBooleanExtra(EXTRA_FROM_SETTINGS_SUMMARY, false)
+                && maxFacesEnrolled()) {
+            // from tips && maxEnrolled
+            Log.d(TAG, "launch face settings");
+            launchFaceSettingsActivity();
+            finish();
+        }
+
+        super.onCreate(savedInstanceState);
+
+        // Wait super::onCreated() then return because SuperNotCalledExceptio will be thrown
+        // if we don't wait for it.
+        if (isFinishing()) {
+            return;
+        }
+
         // Apply extracted theme color to icons.
         final ImageView iconGlasses = findViewById(R.id.icon_glasses);
         final ImageView iconLooking = findViewById(R.id.icon_looking);
@@ -159,35 +172,6 @@ public class FaceEnrollIntroduction extends BiometricEnrollIntroduction {
             infoMessageRequireEyes.setText(getInfoMessageRequireEyes());
         }
 
-    }
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        mFaceManager = getFaceManager();
-
-        if (savedInstanceState == null
-                && !WizardManagerHelper.isAnySetupWizard(getIntent())
-                && !getIntent().getBooleanExtra(EXTRA_FROM_SETTINGS_SUMMARY, false)
-                && maxFacesEnrolled()) {
-            // from tips && maxEnrolled
-            Log.d(TAG, "launch face settings");
-            launchFaceSettingsActivity();
-            finish();
-        }
-
-        super.onCreate(savedInstanceState);
-
-        // Wait super::onCreated() then return because SuperNotCalledExceptio will be thrown
-        // if we don't wait for it.
-        if (isFinishing()) {
-            return;
-        }
-
-        if (!FaceUtils.isFaceUnlockSupported()) {
-            initDefaultLayout();
-        }
-
-        mForRedo = getIntent().getBooleanExtra("for_redo", false);
         // This path is an entry point for SetNewPasswordController, e.g.
         // adb shell am start -a android.app.action.SET_NEW_PASSWORD
         if (mToken == null && BiometricUtils.containsGatekeeperPasswordHandle(getIntent())) {
@@ -223,10 +207,6 @@ public class FaceEnrollIntroduction extends BiometricEnrollIntroduction {
         final boolean cameraPrivacyEnabled = helper
                 .isSensorBlocked(SensorPrivacyManager.Sensors.CAMERA, mUserId);
         Log.v(TAG, "cameraPrivacyEnabled : " + cameraPrivacyEnabled);
-
-        if (FaceUtils.isFaceUnlockSupported() && mHasPassword && mToken != null) {
-            openCustomFaceUnlockPackage();
-        }
     }
 
     private void launchFaceSettingsActivity() {
@@ -324,11 +304,6 @@ public class FaceEnrollIntroduction extends BiometricEnrollIntroduction {
 
     @Override
     protected void onActivityResult(int requestCode, int resultCode, Intent data) {
-	    if (FaceUtils.isFaceUnlockSupported()) {
-            onActivityResultCustom(requestCode, resultCode, data);
-            return;
-        }
-
         if (requestCode == REQUEST_POSTURE_GUIDANCE) {
             mLaunchedPostureGuidance = false;
             if (resultCode == RESULT_CANCELED || resultCode == RESULT_SKIP) {
@@ -361,66 +336,6 @@ public class FaceEnrollIntroduction extends BiometricEnrollIntroduction {
         super.onActivityResult(requestCode, resultCode, data);
     }
 
-    void onActivityResultCustom(int requestCode, int resultCode, Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-        if (requestCode != CHOOSE_LOCK_GENERIC_REQUEST) {
-            if (requestCode != CONFIRM_REQUEST) {
-                if (requestCode == ENROLL_REQUEST) {
-                    if (resultCode == RESULT_FIRST_USER || resultCode == RESULT_OK) {
-                        setResult(RESULT_FIRST_USER);
-                        finish();
-                        return;
-                    }
-                    setResult(RESULT_CANCELED);
-                    finish();
-                }
-            } else if (resultCode == RESULT_OK && data != null) {
-                checkTokenAndOpenCustomFaceUnlockPackage(data);
-            }
-        } else if (resultCode == RESULT_FIRST_USER) {
-            checkTokenAndOpenCustomFaceUnlockPackage(data);
-        }
-    }
-
-    private void openCustomFaceUnlockPackage() {
-        ComponentName componentName;
-        Intent intent = new Intent();
-        intent.putExtra(ChooseLockSettingsHelper.EXTRA_KEY_CHALLENGE_TOKEN, mToken);
-        if (mUserId != -10000) {
-            intent.putExtra("android.intent.extra.USER_ID", mUserId);
-        }
-        if (mForRedo) {
-            componentName = new ComponentName(
-                "com.crdroid.faceunlock",
-                "com.crdroid.faceunlock.FaceEnrollActivity");
-        } else {
-            componentName = new ComponentName(
-                "com.crdroid.faceunlock",
-                "com.crdroid.faceunlock.SetupFaceIntroActivity");
-        }
-        intent.setComponent(componentName);
-        if (intent.resolveActivity(getPackageManager()) != null) {
-            startActivityForResult(intent, ENROLL_REQUEST);
-        }
-    }
-
-    private void checkTokenAndOpenCustomFaceUnlockPackage(Intent intent) {
-        if (mToken == null) {
-            mFaceManager.generateChallenge(mUserId, (sensorId, userId, challenge) -> {
-                if (mToken == null) {
-                    mToken = BiometricUtils.requestGatekeeperHat(this, intent, mUserId,
-                            challenge);
-                    mSensorId = sensorId;
-                    mChallenge = challenge;
-                    BiometricUtils.removeGatekeeperPasswordHandle(this, intent);
-                    openCustomFaceUnlockPackage();
-                }
-            });
-        }else{
-            openCustomFaceUnlockPackage();
-        }
-    }
-
     protected boolean generateChallengeOnCreate() {
         return true;
     }
@@ -468,9 +383,6 @@ public class FaceEnrollIntroduction extends BiometricEnrollIntroduction {
 
     @Override
     protected int getLayoutResource() {
-        if (FaceUtils.isFaceUnlockSupported()) {
-            return R.layout.face_enroll_introduction_invisible;
-        }
         return R.layout.face_enroll_introduction;
     }
 
@@ -514,20 +426,12 @@ public class FaceEnrollIntroduction extends BiometricEnrollIntroduction {
     }
 
     private boolean maxFacesEnrolled() {
-        final boolean isSetupWizard = WizardManagerHelper.isAnySetupWizard(getIntent());
         if (mFaceManager != null) {
-            final List<FaceSensorPropertiesInternal> props =
-                    mFaceManager.getSensorPropertiesInternal();
             // This will need to be updated for devices with multiple face sensors.
-            final int max = props.get(0).maxEnrollmentsPerUser;
             final int numEnrolledFaces = mFaceManager.getEnrolledFaces(mUserId).size();
-            final int maxFacesEnrollableIfSUW = getApplicationContext().getResources()
+            final int maxFacesEnrollable = getApplicationContext().getResources()
                     .getInteger(R.integer.suw_max_faces_enrollable);
-            if (isSetupWizard) {
-                return numEnrolledFaces >= maxFacesEnrollableIfSUW;
-            } else {
-                return numEnrolledFaces >= max;
-            }
+            return numEnrolledFaces >= maxFacesEnrollable;
         } else {
             return false;
         }
diff --git a/src/com/android/settings/biometrics/face/FaceProfileStatusPreferenceController.java b/src/com/android/settings/biometrics/face/FaceProfileStatusPreferenceController.java
index a65beeab9c..a2e11afb7e 100644
--- a/src/com/android/settings/biometrics/face/FaceProfileStatusPreferenceController.java
+++ b/src/com/android/settings/biometrics/face/FaceProfileStatusPreferenceController.java
@@ -27,41 +27,33 @@ import androidx.preference.Preference;
 
 import com.android.settings.R;
 
-import com.android.settings.custom.biometrics.FaceUtils;
-
 public class FaceProfileStatusPreferenceController extends FaceStatusPreferenceController {
 
     private static final String KEY_FACE_SETTINGS = "face_settings_profile";
     private final DevicePolicyManager mDevicePolicyManager;
 
-    public FaceProfileStatusPreferenceController(Context context, int profileChallengeUserId) {
-        super(context, KEY_FACE_SETTINGS, null /* lifecycle */, profileChallengeUserId);
+    public FaceProfileStatusPreferenceController(Context context) {
+        super(context, KEY_FACE_SETTINGS);
         mDevicePolicyManager = context.getSystemService(DevicePolicyManager.class);
     }
 
-    public FaceProfileStatusPreferenceController(
-            Context context, String key, int profileChallengeUserId) {
-        super(context, key, null /* lifecycle */, profileChallengeUserId);
+    public FaceProfileStatusPreferenceController(Context context, String key) {
+        super(context, key);
         mDevicePolicyManager = context.getSystemService(DevicePolicyManager.class);
     }
 
-    public FaceProfileStatusPreferenceController(
-            Context context, Lifecycle lifecycle, int profileChallengeUserId) {
-        super(context, KEY_FACE_SETTINGS, lifecycle, profileChallengeUserId);
+    public FaceProfileStatusPreferenceController(Context context, Lifecycle lifecycle) {
+        super(context, KEY_FACE_SETTINGS, lifecycle);
         mDevicePolicyManager = context.getSystemService(DevicePolicyManager.class);
     }
 
-    public FaceProfileStatusPreferenceController(
-            Context context, String key, Lifecycle lifecycle, int profileChallengeUserId) {
-        super(context, key, lifecycle, profileChallengeUserId);
+    public FaceProfileStatusPreferenceController(Context context, String key, Lifecycle lifecycle) {
+        super(context, key, lifecycle);
         mDevicePolicyManager = context.getSystemService(DevicePolicyManager.class);
     }
 
     @Override
     public int getAvailabilityStatus() {
-        if (FaceUtils.isFaceUnlockSupported()) {
-            return UNSUPPORTED_ON_DEVICE;
-        }
         // Check if Face for Profile is available.
         final int isAvailable = super.getAvailabilityStatus();
         if (isAvailable != AVAILABLE) {
diff --git a/src/com/android/settings/biometrics/face/FaceSettings.java b/src/com/android/settings/biometrics/face/FaceSettings.java
index 34b7ce5806..dc94376b91 100644
--- a/src/com/android/settings/biometrics/face/FaceSettings.java
+++ b/src/com/android/settings/biometrics/face/FaceSettings.java
@@ -52,9 +52,6 @@ import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
 
-import com.android.settings.custom.biometrics.FaceUtils;
-import com.android.settings.custom.biometrics.face.FaceSettingsRedoPreferenceController;
-
 /**
  * Settings screen for face authentication.
  */
@@ -80,7 +77,6 @@ public class FaceSettings extends DashboardFragment {
     private FaceSettingsRemoveButtonPreferenceController mRemoveController;
     private FaceSettingsEnrollButtonPreferenceController mEnrollController;
     private FaceSettingsLockscreenBypassPreferenceController mLockscreenController;
-    private FaceSettingsRedoPreferenceController mRedoController;
     private List<AbstractPreferenceController> mControllers;
 
     private List<Preference> mTogglePreferences;
@@ -91,12 +87,6 @@ public class FaceSettings extends DashboardFragment {
     private boolean mConfirmingPassword;
 
     private final FaceSettingsRemoveButtonPreferenceController.Listener mRemovalListener = () -> {
-        if (FaceUtils.isFaceUnlockSupported()){
-            if (getActivity() != null) {
-                getActivity().finish();
-            }
-            return;
-        }
 
         // Disable the toggles until the user re-enrolls
         for (Preference preference : mTogglePreferences) {
@@ -177,7 +167,9 @@ public class FaceSettings extends DashboardFragment {
                                     R.string.security_settings_face_profile_preference_title)));
         }
 
-        mLockscreenController = use(FaceSettingsLockscreenBypassPreferenceController.class);
+        mLockscreenController = Utils.isMultipleBiometricsSupported(context)
+                ? use(BiometricLockscreenBypassPreferenceController.class)
+                : use(FaceSettingsLockscreenBypassPreferenceController.class);
         mLockscreenController.setUserId(mUserId);
 
         Preference keyguardPref = findPreference(FaceSettingsKeyguardPreferenceController.KEY);
@@ -202,10 +194,6 @@ public class FaceSettings extends DashboardFragment {
         }
         mRemoveController.setUserId(mUserId);
 
-        if (mRedoController != null) {
-            mRedoController.setUserId(mUserId);
-        }
-
         // Don't show keyguard controller for work profile settings.
         if (mUserManager.isManagedProfile(mUserId)) {
             removePreference(FaceSettingsKeyguardPreferenceController.KEY);
@@ -240,7 +228,6 @@ public class FaceSettings extends DashboardFragment {
         } else {
             mAttentionController.setToken(mToken);
             mEnrollController.setToken(mToken);
-            mRedoController.setToken(mToken);
         }
 
         final boolean hasEnrolled = mFaceManager.hasEnrolledTemplates(mUserId);
@@ -321,9 +308,6 @@ public class FaceSettings extends DashboardFragment {
                 mEnrollController = (FaceSettingsEnrollButtonPreferenceController) controller;
                 mEnrollController.setListener(mEnrollListener);
                 mEnrollController.setActivity((SettingsActivity) getActivity());
-            } else if (controller instanceof FaceSettingsRedoPreferenceController) {
-                mRedoController = (FaceSettingsRedoPreferenceController) controller;
-                mRedoController.setActivity((SettingsActivity) getActivity());
             }
         }
 
@@ -338,7 +322,6 @@ public class FaceSettings extends DashboardFragment {
         controllers.add(new FaceSettingsRemoveButtonPreferenceController(context));
         controllers.add(new FaceSettingsConfirmPreferenceController(context));
         controllers.add(new FaceSettingsEnrollButtonPreferenceController(context));
-        controllers.add(new FaceSettingsRedoPreferenceController(context));
         return controllers;
     }
 
@@ -380,10 +363,6 @@ public class FaceSettings extends DashboardFragment {
                         keys.add(FaceSettingsAttentionPreferenceController.KEY);
                     }
 
-                    if (FaceUtils.isFaceUnlockSupported()) {
-                        keys.add("security_settings_face_unlock_category");
-                    }
-
                     return keys;
                 }
 
diff --git a/src/com/android/settings/biometrics/face/FaceSettingsAppPreferenceController.java b/src/com/android/settings/biometrics/face/FaceSettingsAppPreferenceController.java
index 69a019c589..c296e56aa0 100644
--- a/src/com/android/settings/biometrics/face/FaceSettingsAppPreferenceController.java
+++ b/src/com/android/settings/biometrics/face/FaceSettingsAppPreferenceController.java
@@ -25,7 +25,6 @@ import android.provider.Settings;
 import androidx.preference.Preference;
 
 import com.android.settings.Utils;
-import com.android.settings.custom.biometrics.FaceUtils;
 
 /**
  * Preference controller for Face settings page controlling the ability to use
@@ -80,7 +79,7 @@ public class FaceSettingsAppPreferenceController extends FaceSettingsPreferenceC
     @Override
     public int getAvailabilityStatus() {
         // When the device supports multiple biometrics auth, this preference will be hidden.
-        if (Utils.isMultipleBiometricsSupported(mContext) && !FaceUtils.isFaceUnlockSupported()) {
+        if (Utils.isMultipleBiometricsSupported(mContext)) {
             return UNSUPPORTED_ON_DEVICE;
         }
 
diff --git a/src/com/android/settings/biometrics/face/FaceSettingsAttentionPreferenceController.java b/src/com/android/settings/biometrics/face/FaceSettingsAttentionPreferenceController.java
index 5c29e387ac..82fa00b864 100644
--- a/src/com/android/settings/biometrics/face/FaceSettingsAttentionPreferenceController.java
+++ b/src/com/android/settings/biometrics/face/FaceSettingsAttentionPreferenceController.java
@@ -27,8 +27,6 @@ import androidx.preference.SwitchPreference;
 
 import com.android.settings.Utils;
 
-import com.android.settings.custom.biometrics.FaceUtils;
-
 /**
  * Preference controller that manages the ability to use face authentication with/without
  * user attention. See {@link FaceManager#setRequireAttention(boolean, byte[])}.
@@ -120,6 +118,6 @@ public class FaceSettingsAttentionPreferenceController extends FaceSettingsPrefe
 
     @Override
     public int getAvailabilityStatus() {
-        return FaceUtils.isFaceUnlockSupported() ? UNSUPPORTED_ON_DEVICE : AVAILABLE;
+        return AVAILABLE;
     }
 }
diff --git a/src/com/android/settings/biometrics/face/FaceSettingsConfirmPreferenceController.java b/src/com/android/settings/biometrics/face/FaceSettingsConfirmPreferenceController.java
index df296849d5..60f8b21d4f 100644
--- a/src/com/android/settings/biometrics/face/FaceSettingsConfirmPreferenceController.java
+++ b/src/com/android/settings/biometrics/face/FaceSettingsConfirmPreferenceController.java
@@ -30,8 +30,6 @@ import com.android.settings.Utils;
 
 import java.util.List;
 
-import com.android.settings.custom.biometrics.FaceUtils;
-
 /**
  * Preference controller giving the user an option to always require confirmation.
  */
@@ -81,9 +79,6 @@ public class FaceSettingsConfirmPreferenceController extends FaceSettingsPrefere
 
     @Override
     public int getAvailabilityStatus() {
-        if (FaceUtils.isFaceUnlockSupported()){
-            return UNSUPPORTED_ON_DEVICE;
-        }
         List<FaceSensorProperties> properties = mFaceManager.getSensorProperties();
         // If a sensor is convenience, it is possible that it becomes weak or strong with
         // an update. For this reason, the sensor is conditionally unavailable.
diff --git a/src/com/android/settings/biometrics/face/FaceSettingsEnrollButtonPreferenceController.java b/src/com/android/settings/biometrics/face/FaceSettingsEnrollButtonPreferenceController.java
index d7893eead0..b3e0e1ea88 100644
--- a/src/com/android/settings/biometrics/face/FaceSettingsEnrollButtonPreferenceController.java
+++ b/src/com/android/settings/biometrics/face/FaceSettingsEnrollButtonPreferenceController.java
@@ -20,6 +20,8 @@ import static com.android.settings.Utils.SETTINGS_PACKAGE_NAME;
 
 import android.content.Context;
 import android.content.Intent;
+import android.view.View;
+import android.widget.Button;
 
 import androidx.preference.Preference;
 
@@ -29,13 +31,14 @@ import com.android.settings.core.BasePreferenceController;
 import com.android.settings.password.ChooseLockSettingsHelper;
 import com.android.settingslib.widget.LayoutPreference;
 
+import com.google.android.setupdesign.util.ButtonStyler;
 import com.google.android.setupdesign.util.PartnerStyleHelper;
 
 /**
  * Preference controller that allows a user to enroll their face.
  */
 public class FaceSettingsEnrollButtonPreferenceController extends BasePreferenceController
-        implements Preference.OnPreferenceClickListener {
+        implements View.OnClickListener {
 
     private static final String TAG = "FaceSettings/Remove";
     static final String KEY = "security_settings_face_enroll_faces_container";
@@ -45,6 +48,7 @@ public class FaceSettingsEnrollButtonPreferenceController extends BasePreference
     private int mUserId;
     private byte[] mToken;
     private SettingsActivity mActivity;
+    private Button mButton;
     private boolean mIsClicked;
     private Listener mListener;
 
@@ -60,11 +64,19 @@ public class FaceSettingsEnrollButtonPreferenceController extends BasePreference
     @Override
     public void updateState(Preference preference) {
         super.updateState(preference);
-        preference.setOnPreferenceClickListener(this);
+
+        mButton = ((LayoutPreference) preference).findViewById(
+                R.id.security_settings_face_settings_enroll_button);
+
+        if (PartnerStyleHelper.shouldApplyPartnerResource(mButton)) {
+            ButtonStyler.applyPartnerCustomizationPrimaryButtonStyle(mContext, mButton);
+        }
+
+        mButton.setOnClickListener(this);
     }
 
     @Override
-    public boolean onPreferenceClick(Preference preference) {
+    public void onClick(View v) {
         mIsClicked = true;
         final Intent intent = new Intent();
         intent.setClassName(SETTINGS_PACKAGE_NAME, FaceEnrollIntroduction.class.getName());
@@ -75,7 +87,6 @@ public class FaceSettingsEnrollButtonPreferenceController extends BasePreference
         } else {
             mContext.startActivity(intent);
         }
-        return true;
     }
 
     @Override
diff --git a/src/com/android/settings/biometrics/face/FaceSettingsKeyguardPreferenceController.java b/src/com/android/settings/biometrics/face/FaceSettingsKeyguardPreferenceController.java
index c1b79b184a..342d786482 100644
--- a/src/com/android/settings/biometrics/face/FaceSettingsKeyguardPreferenceController.java
+++ b/src/com/android/settings/biometrics/face/FaceSettingsKeyguardPreferenceController.java
@@ -28,8 +28,6 @@ import com.android.settings.Utils;
 import com.android.settingslib.RestrictedLockUtils.EnforcedAdmin;
 import com.android.settingslib.RestrictedSwitchPreference;
 
-import com.android.settings.custom.biometrics.FaceUtils;
-
 /**
  * Preference controller for Face settings page controlling the ability to unlock the phone
  * with face.
@@ -73,7 +71,7 @@ public class FaceSettingsKeyguardPreferenceController extends FaceSettingsPrefer
     @Override
     public int getAvailabilityStatus() {
         // When the device supports multiple biometrics auth, this preference will be unavailable.
-        return Utils.isMultipleBiometricsSupported(mContext) || FaceUtils.isFaceUnlockSupported() ? UNSUPPORTED_ON_DEVICE : AVAILABLE;
+        return Utils.isMultipleBiometricsSupported(mContext) ? UNSUPPORTED_ON_DEVICE : AVAILABLE;
     }
 
     @Override
diff --git a/src/com/android/settings/biometrics/face/FaceSettingsLockscreenBypassPreferenceController.java b/src/com/android/settings/biometrics/face/FaceSettingsLockscreenBypassPreferenceController.java
index b2457b1c8b..c0cb64ec6b 100644
--- a/src/com/android/settings/biometrics/face/FaceSettingsLockscreenBypassPreferenceController.java
+++ b/src/com/android/settings/biometrics/face/FaceSettingsLockscreenBypassPreferenceController.java
@@ -83,15 +83,16 @@ public class FaceSettingsLockscreenBypassPreferenceController
 
     @Override
     public int getAvailabilityStatus() {
+        // When the device supports multiple biometrics auth, this preference won't be shown
+        // in face unlock category.
+        if (Utils.isMultipleBiometricsSupported(mContext)) {
+            return UNSUPPORTED_ON_DEVICE;
+        }
         if (mUserManager.isManagedProfile(getUserId())) {
             return UNSUPPORTED_ON_DEVICE;
         }
 
-        boolean faceAuthOnlyOnSecurityView  = mContext.getResources().getBoolean(
-                com.android.internal.R.bool.config_faceAuthOnlyOnSecurityView);
-
-        if (mFaceManager != null && mFaceManager.isHardwareDetected() &&
-                !faceAuthOnlyOnSecurityView) {
+        if (mFaceManager != null && mFaceManager.isHardwareDetected()) {
             return mFaceManager.hasEnrolledTemplates(getUserId())
                     ? AVAILABLE : DISABLED_DEPENDENT_SETTING;
         } else {
diff --git a/src/com/android/settings/biometrics/face/FaceSettingsLockscreenUnlockMethodPreferenceController.java b/src/com/android/settings/biometrics/face/FaceSettingsLockscreenUnlockMethodPreferenceController.java
deleted file mode 100644
index e37f4dc8d3..0000000000
--- a/src/com/android/settings/biometrics/face/FaceSettingsLockscreenUnlockMethodPreferenceController.java
+++ /dev/null
@@ -1,59 +0,0 @@
-/*
- * Copyright (C) 2019 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License
- */
-
-package com.android.settings.biometrics.face;
-
-import android.content.Context;
-import android.content.pm.PackageManager;
-import android.hardware.face.FaceManager;
-import android.os.UserHandle;
-import android.os.UserManager;
-
-import com.android.settings.core.BasePreferenceController;
-
-public class FaceSettingsLockscreenUnlockMethodPreferenceController
-        extends BasePreferenceController {
-
-    protected FaceManager mFaceManager;
-    private UserManager mUserManager;
-
-    public FaceSettingsLockscreenUnlockMethodPreferenceController(Context context, String preferenceKey) {
-        super(context, preferenceKey);
-        if (context.getPackageManager().hasSystemFeature(PackageManager.FEATURE_FACE)) {
-            mFaceManager = context.getSystemService(FaceManager.class);
-        }
-
-        mUserManager = context.getSystemService(UserManager.class);
-    }
-
-    @Override
-    public int getAvailabilityStatus() {
-        if (mUserManager.isManagedProfile(UserHandle.myUserId())) {
-            return UNSUPPORTED_ON_DEVICE;
-        }
-
-        boolean faceAuthOnlyOnSecurityView  = mContext.getResources().getBoolean(
-                com.android.internal.R.bool.config_faceAuthOnlyOnSecurityView);
-
-        if (mFaceManager != null && mFaceManager.isHardwareDetected() &&
-                !faceAuthOnlyOnSecurityView) {
-            return mFaceManager.hasEnrolledTemplates(UserHandle.myUserId())
-                    ? AVAILABLE : DISABLED_DEPENDENT_SETTING;
-        } else {
-            return UNSUPPORTED_ON_DEVICE;
-        }
-    }
-}
\ No newline at end of file
diff --git a/src/com/android/settings/biometrics/face/FaceSettingsRemoveButtonPreferenceController.java b/src/com/android/settings/biometrics/face/FaceSettingsRemoveButtonPreferenceController.java
index 01f5196b47..7db5958489 100644
--- a/src/com/android/settings/biometrics/face/FaceSettingsRemoveButtonPreferenceController.java
+++ b/src/com/android/settings/biometrics/face/FaceSettingsRemoveButtonPreferenceController.java
@@ -25,6 +25,8 @@ import android.hardware.face.Face;
 import android.hardware.face.FaceManager;
 import android.os.Bundle;
 import android.util.Log;
+import android.view.View;
+import android.widget.Button;
 import android.widget.Toast;
 
 import androidx.preference.Preference;
@@ -38,16 +40,17 @@ import com.android.settings.overlay.FeatureFactory;
 import com.android.settingslib.core.instrumentation.MetricsFeatureProvider;
 import com.android.settingslib.widget.LayoutPreference;
 
-import java.util.List;
+import com.google.android.setupdesign.util.ButtonStyler;
+import com.google.android.setupdesign.util.PartnerStyleHelper;
 
-import com.android.settings.custom.biometrics.FaceUtils;
+import java.util.List;
 
 /**
  * Controller for the remove button. This assumes that there is only a single face enrolled. The UI
  * will likely change if multiple enrollments are allowed/supported.
  */
-public class FaceSettingsRemoveButtonPreferenceController extends BasePreferenceController implements
-        Preference.OnPreferenceClickListener {
+public class FaceSettingsRemoveButtonPreferenceController extends BasePreferenceController
+        implements View.OnClickListener {
 
     private static final String TAG = "FaceSettings/Remove";
     static final String KEY = "security_settings_face_delete_faces_container";
@@ -67,7 +70,7 @@ public class FaceSettingsRemoveButtonPreferenceController extends BasePreference
             AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
 
             builder.setTitle(R.string.security_settings_face_settings_remove_dialog_title)
-                    .setMessage(mIsConvenience && !FaceUtils.isFaceUnlockSupported()
+                    .setMessage(mIsConvenience
                             ? R.string.security_settings_face_settings_remove_dialog_details_convenience
                             : R.string.security_settings_face_settings_remove_dialog_details)
                     .setPositiveButton(R.string.delete, mOnClickListener)
@@ -91,6 +94,7 @@ public class FaceSettingsRemoveButtonPreferenceController extends BasePreference
     }
 
     private Preference mPreference;
+    private Button mButton;
     private Listener mListener;
     private SettingsActivity mActivity;
     private int mUserId;
@@ -114,7 +118,7 @@ public class FaceSettingsRemoveButtonPreferenceController extends BasePreference
             if (remaining == 0) {
                 final List<Face> faces = mFaceManager.getEnrolledFaces(mUserId);
                 if (!faces.isEmpty()) {
-                    mPreference.setEnabled(true);
+                    mButton.setEnabled(true);
                 } else {
                     mRemoving = false;
                     mListener.onRemoved();
@@ -130,7 +134,7 @@ public class FaceSettingsRemoveButtonPreferenceController extends BasePreference
         @Override
         public void onClick(DialogInterface dialog, int which) {
             if (which == DialogInterface.BUTTON_POSITIVE) {
-                mPreference.setEnabled(false);
+                mButton.setEnabled(false);
                 final List<Face> faces = mFaceManager.getEnrolledFaces(mUserId);
                 if (faces.isEmpty()) {
                     Log.e(TAG, "No faces");
@@ -143,7 +147,7 @@ public class FaceSettingsRemoveButtonPreferenceController extends BasePreference
                 // Remove the first/only face
                 mFaceUpdater.remove(faces.get(0), mUserId, mRemovalCallback);
             } else {
-                mPreference.setEnabled(true);
+                mButton.setEnabled(true);
                 mRemoving = false;
             }
         }
@@ -168,13 +172,21 @@ public class FaceSettingsRemoveButtonPreferenceController extends BasePreference
     @Override
     public void updateState(Preference preference) {
         super.updateState(preference);
+
         mPreference = preference;
-        mPreference.setOnPreferenceClickListener(this);
+        mButton = ((LayoutPreference) preference)
+                .findViewById(R.id.security_settings_face_settings_remove_button);
+
+        if (PartnerStyleHelper.shouldApplyPartnerResource(mButton)) {
+            ButtonStyler.applyPartnerCustomizationPrimaryButtonStyle(mContext, mButton);
+        }
+
+        mButton.setOnClickListener(this);
 
         if (!FaceSettings.isFaceHardwareDetected(mContext)) {
-            mPreference.setEnabled(false);
+            mButton.setEnabled(false);
         } else {
-            mPreference.setEnabled(!mRemoving);
+            mButton.setEnabled(!mRemoving);
         }
     }
 
@@ -189,13 +201,15 @@ public class FaceSettingsRemoveButtonPreferenceController extends BasePreference
     }
 
     @Override
-    public boolean onPreferenceClick(Preference preference) {
-        mRemoving = true;
-        ConfirmRemoveDialog dialog = new ConfirmRemoveDialog();
-        dialog.setOnClickListener(mOnClickListener);
-        dialog.setIsConvenience(BiometricUtils.isConvenience(mFaceManager));
-        dialog.show(mActivity.getSupportFragmentManager(), ConfirmRemoveDialog.class.getName());
-        return true;
+    public void onClick(View v) {
+        if (v == mButton) {
+            mMetricsFeatureProvider.logClickedPreference(mPreference, getMetricsCategory());
+            mRemoving = true;
+            ConfirmRemoveDialog dialog = new ConfirmRemoveDialog();
+            dialog.setOnClickListener(mOnClickListener);
+            dialog.setIsConvenience(BiometricUtils.isConvenience(mFaceManager));
+            dialog.show(mActivity.getSupportFragmentManager(), ConfirmRemoveDialog.class.getName());
+        }
     }
 
     public void setListener(Listener listener) {
diff --git a/src/com/android/settings/biometrics/face/FaceStatusPreferenceController.java b/src/com/android/settings/biometrics/face/FaceStatusPreferenceController.java
index 38bcdcbb9e..f18a74fa19 100644
--- a/src/com/android/settings/biometrics/face/FaceStatusPreferenceController.java
+++ b/src/com/android/settings/biometrics/face/FaceStatusPreferenceController.java
@@ -18,7 +18,6 @@ package com.android.settings.biometrics.face;
 
 import android.content.Context;
 import android.hardware.face.FaceManager;
-import android.os.UserHandle;
 
 import androidx.annotation.Nullable;
 import androidx.lifecycle.Lifecycle;
@@ -33,8 +32,6 @@ import com.android.settings.biometrics.BiometricStatusPreferenceController;
 import com.android.settingslib.RestrictedLockUtils;
 import com.android.settingslib.RestrictedPreference;
 
-import com.android.settings.custom.biometrics.FaceUtils;
-
 public class FaceStatusPreferenceController extends BiometricStatusPreferenceController
         implements LifecycleObserver {
 
@@ -59,14 +56,8 @@ public class FaceStatusPreferenceController extends BiometricStatusPreferenceCon
         this(context, KEY_FACE_SETTINGS, lifecycle);
     }
 
-    public FaceStatusPreferenceController(
-            Context context, String key, Lifecycle lifecycle) {
-        this(context, key, lifecycle, UserHandle.USER_NULL /* profileChallengeUserId */);
-    }
-
-    public FaceStatusPreferenceController(
-            Context context, String key, Lifecycle lifecycle, int profileChallengeUserId) {
-        super(context, key, profileChallengeUserId);
+    public FaceStatusPreferenceController(Context context, String key, Lifecycle lifecycle) {
+        super(context, key);
         mFaceManager = Utils.getFaceManagerOrNull(context);
         mFaceStatusUtils = new FaceStatusUtils(context, mFaceManager, getUserId());
 
@@ -99,9 +90,6 @@ public class FaceStatusPreferenceController extends BiometricStatusPreferenceCon
     public void updateState(Preference preference) {
         super.updateState(preference);
         updateStateInternal();
-        if (FaceUtils.isFaceUnlockSupported()) {
-            preference.setEnabled(!FaceUtils.isFaceDisabledByAdmin(mContext));
-        }
     }
 
     private void updateStateInternal() {
diff --git a/src/com/android/settings/biometrics/face/FaceStatusUtils.java b/src/com/android/settings/biometrics/face/FaceStatusUtils.java
index 5f0b1658a8..80ffb03b0b 100644
--- a/src/com/android/settings/biometrics/face/FaceStatusUtils.java
+++ b/src/com/android/settings/biometrics/face/FaceStatusUtils.java
@@ -26,8 +26,6 @@ import com.android.settings.Utils;
 import com.android.settings.biometrics.ParentalControlsUtils;
 import com.android.settingslib.RestrictedLockUtils.EnforcedAdmin;
 
-import com.android.settings.custom.biometrics.FaceUtils;
-
 /**
  * Utilities for face details shared between Security Settings and Safety Center.
  */
@@ -64,9 +62,6 @@ public class FaceStatusUtils {
      * Returns the summary of face settings entity.
      */
     public String getSummary() {
-        if (FaceUtils.isFaceUnlockSupported() && FaceUtils.isFaceDisabledByAdmin(mContext)) {
-            return mContext.getResources().getString(R.string.disabled_by_administrator_summary);
-        }
         return mContext.getResources().getString(hasEnrolled()
                 ? R.string.security_settings_face_preference_summary
                 : R.string.security_settings_face_preference_summary_none);
diff --git a/src/com/android/settings/biometrics/face/FaceUnlockCategoryPreferenceController.java b/src/com/android/settings/biometrics/face/FaceUnlockCategoryPreferenceController.java
index 870756ef29..d0debdfe59 100644
--- a/src/com/android/settings/biometrics/face/FaceUnlockCategoryPreferenceController.java
+++ b/src/com/android/settings/biometrics/face/FaceUnlockCategoryPreferenceController.java
@@ -20,8 +20,6 @@ import android.content.Context;
 import com.android.settings.Utils;
 import com.android.settings.core.BasePreferenceController;
 
-import com.android.settings.custom.biometrics.FaceUtils;
-
 /**
  * Preference controller that controls the face unlock features to be shown / be hidden.
  */
@@ -33,6 +31,6 @@ public class FaceUnlockCategoryPreferenceController extends BasePreferenceContro
 
     @Override
     public int getAvailabilityStatus() {
-        return Utils.isMultipleBiometricsSupported(mContext) && !FaceUtils.isFaceUnlockSupported() ? UNSUPPORTED_ON_DEVICE : AVAILABLE;
+        return Utils.isMultipleBiometricsSupported(mContext) ? UNSUPPORTED_ON_DEVICE : AVAILABLE;
     }
 }
diff --git a/src/com/android/settings/biometrics/fingerprint/FingerprintProfileStatusPreferenceController.java b/src/com/android/settings/biometrics/fingerprint/FingerprintProfileStatusPreferenceController.java
index f303758ebe..d6d0b8f8ac 100644
--- a/src/com/android/settings/biometrics/fingerprint/FingerprintProfileStatusPreferenceController.java
+++ b/src/com/android/settings/biometrics/fingerprint/FingerprintProfileStatusPreferenceController.java
@@ -26,24 +26,21 @@ public class FingerprintProfileStatusPreferenceController
 
     public static final String KEY_FINGERPRINT_SETTINGS = "fingerprint_settings_profile";
 
-    public FingerprintProfileStatusPreferenceController(
-            Context context, int profileChallengeUserId) {
-        super(context, KEY_FINGERPRINT_SETTINGS, null /* lifecycle */, profileChallengeUserId);
+    public FingerprintProfileStatusPreferenceController(Context context) {
+        super(context, KEY_FINGERPRINT_SETTINGS);
     }
 
-    public FingerprintProfileStatusPreferenceController(
-            Context context, String key, int profileChallengeUserId) {
-        super(context, key, null /* lifecycle */, profileChallengeUserId);
+    public FingerprintProfileStatusPreferenceController(Context context, String key) {
+        super(context, key);
     }
 
-    public FingerprintProfileStatusPreferenceController(
-            Context context, Lifecycle lifecycle, int profileChallengeUserId) {
-        super(context, KEY_FINGERPRINT_SETTINGS, lifecycle, profileChallengeUserId);
+    public FingerprintProfileStatusPreferenceController(Context context, Lifecycle lifecycle) {
+        super(context, KEY_FINGERPRINT_SETTINGS, lifecycle);
     }
 
     public FingerprintProfileStatusPreferenceController(
-            Context context, String key, Lifecycle lifecycle, int profileChallengeUserId) {
-        super(context, key, lifecycle, profileChallengeUserId);
+            Context context, String key, Lifecycle lifecycle) {
+        super(context, key, lifecycle);
     }
 
     @Override
diff --git a/src/com/android/settings/biometrics/fingerprint/FingerprintStatusPreferenceController.java b/src/com/android/settings/biometrics/fingerprint/FingerprintStatusPreferenceController.java
index 7a33706e91..347fec7287 100644
--- a/src/com/android/settings/biometrics/fingerprint/FingerprintStatusPreferenceController.java
+++ b/src/com/android/settings/biometrics/fingerprint/FingerprintStatusPreferenceController.java
@@ -18,7 +18,6 @@ package com.android.settings.biometrics.fingerprint;
 
 import android.content.Context;
 import android.hardware.fingerprint.FingerprintManager;
-import android.os.UserHandle;
 
 import androidx.annotation.Nullable;
 import androidx.lifecycle.Lifecycle;
@@ -57,12 +56,7 @@ public class FingerprintStatusPreferenceController extends BiometricStatusPrefer
     }
 
     public FingerprintStatusPreferenceController(Context context, String key, Lifecycle lifecycle) {
-        this(context, key, lifecycle, UserHandle.USER_NULL /* profileChallengeUserId */);
-    }
-
-    public FingerprintStatusPreferenceController(
-            Context context, String key, Lifecycle lifecycle, int profileChallengeUserId) {
-        super(context, key, profileChallengeUserId);
+        super(context, key);
         mFingerprintManager = Utils.getFingerprintManagerOrNull(context);
         mFingerprintStatusUtils =
                 new FingerprintStatusUtils(context, mFingerprintManager, getUserId());
diff --git a/src/com/android/settings/custom/biometrics/FaceUtils.java b/src/com/android/settings/custom/biometrics/FaceUtils.java
deleted file mode 100644
index b83aec83a9..0000000000
--- a/src/com/android/settings/custom/biometrics/FaceUtils.java
+++ /dev/null
@@ -1,31 +0,0 @@
-package com.android.settings.custom.biometrics;
-
-import android.app.admin.DevicePolicyManager;
-import android.content.Context;
-import android.os.SystemProperties;
-import android.util.Log;
-
-import com.android.internal.util.custom.faceunlock.FaceUnlockUtils;
-
-public final class FaceUtils {
-    private static final String TAG = "FaceUtils";
-
-    public static boolean isFaceUnlockSupported() {
-        return FaceUnlockUtils.isFaceUnlockSupported();
-    }
-
-    public static boolean isFaceDisabledByAdmin(Context context) {
-        DevicePolicyManager devicePolicyManager = (DevicePolicyManager) context.getSystemService("device_policy");
-        try {
-            if (devicePolicyManager.getPasswordQuality(null) > 32768) {
-                return true;
-            }
-        } catch (SecurityException e) {
-            Log.e(TAG, "isFaceDisabledByAdmin error:", e);
-        }
-        if ((devicePolicyManager.getKeyguardDisabledFeatures(null) & 128) != 0) {
-            return true;
-        }
-        return false;
-    }
-}
diff --git a/src/com/android/settings/custom/biometrics/face/FaceEnrollActivity.java b/src/com/android/settings/custom/biometrics/face/FaceEnrollActivity.java
deleted file mode 100644
index b4ad610724..0000000000
--- a/src/com/android/settings/custom/biometrics/face/FaceEnrollActivity.java
+++ /dev/null
@@ -1,34 +0,0 @@
-package com.android.settings.custom.biometrics.face;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import com.android.settings.biometrics.face.FaceEnrollIntroduction;
-import com.android.settings.custom.biometrics.FaceUtils;
-
-public class FaceEnrollActivity extends Activity {
-    private byte[] mToken;
-    @Override
-    public void onCreate(Bundle bundle) {
-        super.onCreate(bundle);
-        if (FaceUtils.isFaceUnlockSupported()) {
-            if (mToken == null) {
-                mToken = getIntent().getByteArrayExtra("hw_auth_token");
-            }
-            Intent faceIntroIntent = getFaceIntroIntent();
-            faceIntroIntent.putExtra("for_redo", getIntent().getBooleanExtra("for_redo", false));
-            faceIntroIntent.putExtra("hw_auth_token", mToken);
-            if (getCallingActivity() != null) {
-                faceIntroIntent.setFlags(33554432);
-            }
-            startActivity(faceIntroIntent);
-        }
-        finish();
-    }
-
-    private Intent getFaceIntroIntent() {
-        Intent intent = new Intent(this, FaceEnrollIntroduction.class);
-        intent.addFlags(268468224);
-        return intent;
-    }
-}
diff --git a/src/com/android/settings/custom/biometrics/face/FaceSettingsRedoPreferenceController.java b/src/com/android/settings/custom/biometrics/face/FaceSettingsRedoPreferenceController.java
deleted file mode 100644
index 1ae637b9d8..0000000000
--- a/src/com/android/settings/custom/biometrics/face/FaceSettingsRedoPreferenceController.java
+++ /dev/null
@@ -1,138 +0,0 @@
-package com.android.settings.custom.biometrics.face;
-
-import android.app.AlertDialog;
-import android.content.Context;
-import android.content.DialogInterface;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.hardware.face.Face;
-import android.hardware.face.FaceManager;
-import android.util.Log;
-import android.widget.Toast;
-import androidx.preference.Preference;
-import com.android.settings.R;
-import com.android.settings.SettingsActivity;
-import com.android.settings.core.BasePreferenceController;
-import com.android.settings.slices.SliceBackgroundWorker;
-import com.android.settings.biometrics.face.FaceSettings;
-import com.android.settings.custom.biometrics.FaceUtils;
-import java.util.List;
-
-public class FaceSettingsRedoPreferenceController extends BasePreferenceController implements
-        Preference.OnPreferenceClickListener {
-    static final String KEY = "security_settings_face_redo_face_scan";
-    private static final String TAG = "FaceSettings/Redo";
-    private SettingsActivity mActivity;
-    private final Context mContext;
-    private final FaceManager mFaceManager;
-    private final FaceManager.RemovalCallback mRemovalCallback;
-    private int mUserId;
-    private byte[] mToken;
-
-    @Override 
-    public String getPreferenceKey() {
-        return KEY;
-    }
-
-    public FaceSettingsRedoPreferenceController(Context context, String str) {
-        super(context, str);
-        mRemovalCallback = new FaceManager.RemovalCallback() {
-            @Override
-            public void onRemovalError(Face face, int i, CharSequence charSequence) {
-                Log.e(FaceSettingsRedoPreferenceController.TAG, "Unable to remove face: " + face.getBiometricId() + " error: " + i + " " + ((Object) charSequence));
-                Toast.makeText(mContext, charSequence, 0).show();
-            }
-
-            @Override
-            public void onRemovalSucceeded(Face face, int i) {
-                if (i == 0) {
-                    Log.v(FaceSettingsRedoPreferenceController.TAG, "onRemovalSucceeded ");
-                    Intent intent = new Intent("com.android.settings.intent.action.FACE_ENROLL");
-                    intent.putExtra("for_face", true);
-                    intent.putExtra("for_redo", true);
-                    intent.putExtra("hw_auth_token", mToken);
-                    intent.addFlags(268435456);
-                    mContext.startActivity(intent);
-                    return;
-                }
-                Log.v(FaceSettingsRedoPreferenceController.TAG, "Remaining: " + i);
-            }
-        };
-        mContext = context;
-        mFaceManager = (FaceManager) context.getSystemService(FaceManager.class);
-    }
-
-    public FaceSettingsRedoPreferenceController(Context context) {
-        this(context, KEY);
-    }
-
-    public void setUserId(int i) {
-        mUserId = i;
-    }
-
-    @Override
-    public void updateState(Preference preference) {
-        super.updateState(preference);
-        if (!FaceSettings.isFaceHardwareDetected(mContext) ||
-              !mFaceManager.hasEnrolledTemplates(mUserId)) {
-            preference.setEnabled(false);
-        } else {
-            preference.setEnabled(true);
-            preference.setOnPreferenceClickListener(this);
-        }
-    }
-
-    @Override
-    public int getAvailabilityStatus() {
-        return FaceUtils.isFaceUnlockSupported() ? AVAILABLE : UNSUPPORTED_ON_DEVICE;
-    }
-
-    @Override
-    public boolean onPreferenceClick(Preference preference) {
-        showFaceRedoWarningDialog();
-        return true;
-    }
-
-    public void setActivity(SettingsActivity settingsActivity) {
-        mActivity = settingsActivity;
-    }
-
-    private void deleteFace() {
-        List enrolledFaces = mFaceManager.getEnrolledFaces(mUserId);
-        if (enrolledFaces.isEmpty()) {
-            Log.e(TAG, "No faces");
-            return;
-        }
-        if (enrolledFaces.size() > 1) {
-            Log.e(TAG, "Multiple enrollments: " + enrolledFaces.size());
-        }
-        mFaceManager.remove((Face) enrolledFaces.get(0), mUserId, mRemovalCallback);
-    }
-
-    void showFaceRedoWarningDialog() {
-        AlertDialog.Builder builder = new AlertDialog.Builder(mActivity);
-        builder.setTitle(R.string.security_settings_face_unlock_redo_face_scan_title)
-            .setMessage(R.string.face_redo_warning_msg)
-            .setPositiveButton(R.string.face_redo_confirm_btn, new DialogInterface.OnClickListener() {
-                @Override
-                public void onClick(DialogInterface dialogInterface, int i) {
-                    deleteFace();
-                }
-            })
-            .setNegativeButton(R.string.cancel, new DialogInterface.OnClickListener() {
-                @Override
-                public void onClick(DialogInterface dialogInterface, int i) {
-                }
-            })
-            .setOnCancelListener(new DialogInterface.OnCancelListener() {
-                @Override
-                public void onCancel(DialogInterface dialogInterface) {
-                }
-            });
-        builder.create().show();
-    }
-
-    public void setToken(byte[] token) {
-        mToken = token;
-    }
-}
diff --git a/src/com/android/settings/deviceinfo/firmwareversion/LineageVersionDetailPreferenceController.java b/src/com/android/settings/deviceinfo/firmwareversion/LineageVersionDetailPreferenceController.java
index 0e9175d8d2..59b0e29aab 100644
--- a/src/com/android/settings/deviceinfo/firmwareversion/LineageVersionDetailPreferenceController.java
+++ b/src/com/android/settings/deviceinfo/firmwareversion/LineageVersionDetailPreferenceController.java
@@ -28,7 +28,7 @@ public class LineageVersionDetailPreferenceController extends BasePreferenceCont
 
     private static final String TAG = "lineageVersionDialogCtrl";
 
-    private static final String KEY_LINEAGE_VERSION_PROP = "ro.modversion";
+    private static final String KEY_LINEAGE_VERSION_PROP = "ro.floko.build.version";
 
     public LineageVersionDetailPreferenceController(Context context, String key) {
         super(context, key);
diff --git a/src/com/android/settings/homepage/contextualcards/FaceReEnrollDialog.java b/src/com/android/settings/homepage/contextualcards/FaceReEnrollDialog.java
index f558d70540..a8239241bf 100644
--- a/src/com/android/settings/homepage/contextualcards/FaceReEnrollDialog.java
+++ b/src/com/android/settings/homepage/contextualcards/FaceReEnrollDialog.java
@@ -33,8 +33,6 @@ import com.android.settings.Utils;
 import com.android.settings.biometrics.face.FaceUpdater;
 import com.android.settings.homepage.contextualcards.slices.FaceSetupSlice;
 
-import com.android.settings.custom.biometrics.FaceUtils;
-
 /**
  * This class is used to show a popup dialog for {@link FaceSetupSlice}.
  */
@@ -44,7 +42,6 @@ public class FaceReEnrollDialog extends AlertActivity implements
     private static final String TAG = "FaceReEnrollDialog";
 
     private static final String BIOMETRIC_ENROLL_ACTION = "android.settings.BIOMETRIC_ENROLL";
-    private static final String BIOMETRIC_ENROLL_ACTION_CUSTOM = "com.android.settings.intent.action.FACE_ENROLL";
 
     private FaceManager mFaceManager;
     private FaceUpdater mFaceUpdater;
@@ -116,9 +113,7 @@ public class FaceReEnrollDialog extends AlertActivity implements
                     return;
                 }
                 // Send user to the enroll flow.
-                final Intent reEnroll = new Intent(
-                    FaceUtils.isFaceUnlockSupported() ?
-                    BIOMETRIC_ENROLL_ACTION_CUSTOM : BIOMETRIC_ENROLL_ACTION);
+                final Intent reEnroll = new Intent(BIOMETRIC_ENROLL_ACTION);
                 final Context context = getApplicationContext();
 
                 try {
diff --git a/src/com/android/settings/security/ChangeProfileScreenLockPreferenceController.java b/src/com/android/settings/security/ChangeProfileScreenLockPreferenceController.java
index aa3f56ccf8..7c946c3c3e 100644
--- a/src/com/android/settings/security/ChangeProfileScreenLockPreferenceController.java
+++ b/src/com/android/settings/security/ChangeProfileScreenLockPreferenceController.java
@@ -40,13 +40,13 @@ public class ChangeProfileScreenLockPreferenceController extends
     private final String mPreferenceKey;
 
     public ChangeProfileScreenLockPreferenceController(Context context,
-            SettingsPreferenceFragment host, int profileChallengeUserId) {
-        this(context, host, KEY_UNLOCK_SET_OR_CHANGE_PROFILE, profileChallengeUserId);
+            SettingsPreferenceFragment host) {
+        this(context, host, KEY_UNLOCK_SET_OR_CHANGE_PROFILE);
     }
 
     public ChangeProfileScreenLockPreferenceController(Context context,
-            SettingsPreferenceFragment host, String key, int profileChallengeUserId) {
-        super(context, host, profileChallengeUserId);
+            SettingsPreferenceFragment host, String key) {
+        super(context, host);
         this.mPreferenceKey = key;
     }
 
diff --git a/src/com/android/settings/security/ChangeScreenLockPreferenceController.java b/src/com/android/settings/security/ChangeScreenLockPreferenceController.java
index 13c9882096..3870634f66 100644
--- a/src/com/android/settings/security/ChangeScreenLockPreferenceController.java
+++ b/src/com/android/settings/security/ChangeScreenLockPreferenceController.java
@@ -54,18 +54,13 @@ public class ChangeScreenLockPreferenceController extends AbstractPreferenceCont
     protected RestrictedPreference mPreference;
 
     public ChangeScreenLockPreferenceController(Context context, SettingsPreferenceFragment host) {
-        this(context, host, UserHandle.USER_NULL /* profileChallengeUserId */);
-    }
-
-    public ChangeScreenLockPreferenceController(
-            Context context, SettingsPreferenceFragment host, int profileChallengeUserId) {
         super(context);
         mUm = (UserManager) context.getSystemService(Context.USER_SERVICE);
         mLockPatternUtils = FeatureFactory.getFactory(context)
                 .getSecurityFeatureProvider()
                 .getLockPatternUtils(context);
         mHost = host;
-        mProfileChallengeUserId = profileChallengeUserId;
+        mProfileChallengeUserId = Utils.getManagedProfileId(mUm, mUserId);
         mMetricsFeatureProvider = FeatureFactory.getFactory(context).getMetricsFeatureProvider();
         mScreenLockPreferenceDetailUtils = new ScreenLockPreferenceDetailsUtils(context);
     }
diff --git a/src/com/android/settings/security/LockUnificationPreferenceController.java b/src/com/android/settings/security/LockUnificationPreferenceController.java
index defeffbfba..d85d65b386 100644
--- a/src/com/android/settings/security/LockUnificationPreferenceController.java
+++ b/src/com/android/settings/security/LockUnificationPreferenceController.java
@@ -25,7 +25,6 @@ import android.app.Activity;
 import android.app.admin.DevicePolicyManager;
 import android.content.Context;
 import android.content.Intent;
-import android.content.pm.UserInfo;
 import android.os.Bundle;
 import android.os.UserHandle;
 import android.os.UserManager;
@@ -88,13 +87,12 @@ public class LockUnificationPreferenceController extends AbstractPreferenceContr
         mUnifyProfile = screen.findPreference(mPreferenceKey);
     }
 
-    public LockUnificationPreferenceController(
-            Context context, SettingsPreferenceFragment host, int profileUserId) {
-        this(context, host, KEY_UNIFICATION, profileUserId);
+    public LockUnificationPreferenceController(Context context, SettingsPreferenceFragment host) {
+        this(context, host, KEY_UNIFICATION);
     }
 
     public LockUnificationPreferenceController(
-            Context context, SettingsPreferenceFragment host, String key, int profileUserId) {
+            Context context, SettingsPreferenceFragment host, String key) {
         super(context);
         mHost = host;
         mUm = context.getSystemService(UserManager.class);
@@ -102,7 +100,7 @@ public class LockUnificationPreferenceController extends AbstractPreferenceContr
         mLockPatternUtils = FeatureFactory.getFactory(context)
                 .getSecurityFeatureProvider()
                 .getLockPatternUtils(context);
-        mProfileUserId = profileUserId;
+        mProfileUserId = Utils.getManagedProfileId(mUm, MY_USER_ID);
         mCurrentDevicePassword = LockscreenCredential.createNone();
         mCurrentProfilePassword = LockscreenCredential.createNone();
         this.mPreferenceKey = key;
@@ -126,10 +124,8 @@ public class LockUnificationPreferenceController extends AbstractPreferenceContr
         }
         final boolean useOneLock = (Boolean) value;
         if (useOneLock) {
-            final UserInfo parentUser = mUm.getProfileParent(mProfileUserId);
-            final int parentUserId = parentUser != null ? parentUser.id : MY_USER_ID;
             mRequireNewDevicePassword = !mDpm.isPasswordSufficientAfterProfileUnification(
-                    parentUserId, mProfileUserId);
+                    UserHandle.myUserId(), mProfileUserId);
             startUnification();
         } else {
             final String title = mContext.getString(R.string.unlock_set_unlock_launch_picker_title);
diff --git a/src/com/android/settings/security/SecurityAdvancedSettings.java b/src/com/android/settings/security/SecurityAdvancedSettings.java
index ca10f6df57..f716064a6a 100644
--- a/src/com/android/settings/security/SecurityAdvancedSettings.java
+++ b/src/com/android/settings/security/SecurityAdvancedSettings.java
@@ -27,8 +27,6 @@ import android.app.settings.SettingsEnums;
 import android.content.Context;
 import android.content.Intent;
 import android.os.Bundle;
-import android.os.UserHandle;
-import android.os.UserManager;
 
 import com.android.settings.R;
 import com.android.settings.biometrics.combination.CombinedBiometricProfileStatusPreferenceController;
@@ -40,7 +38,6 @@ import com.android.settings.safetycenter.SafetyCenterManagerWrapper;
 import com.android.settings.search.BaseSearchIndexProvider;
 import com.android.settings.security.trustagent.TrustAgentListPreferenceController;
 import com.android.settings.widget.PreferenceCategoryController;
-import com.android.settings.Utils;
 import com.android.settingslib.core.AbstractPreferenceController;
 import com.android.settingslib.core.lifecycle.Lifecycle;
 import com.android.settingslib.drawer.CategoryKey;
@@ -146,31 +143,18 @@ public class SecurityAdvancedSettings extends DashboardFragment {
         final List<AbstractPreferenceController> controllers = new ArrayList<>();
         controllers.add(new TrustAgentListPreferenceController(context, host, lifecycle));
 
-        // TODO: Add preferences for every managed profile.
-        // This may require substantial reworking, so for now, we simply show the
-        // first managed profile as usual, unless the Settings activity is accessed
-        // via a specific profile, in which case its preferences will be shown.
-        final UserManager userManager =
-                (UserManager) context.getSystemService(Context.USER_SERVICE);
-        int profileId = UserHandle.myUserId();
-        if (!userManager.isManagedProfile(profileId)) {
-            profileId = Utils.getManagedProfileId(userManager, profileId);
-        }
-
         final List<AbstractPreferenceController> profileSecurityControllers = new ArrayList<>();
         profileSecurityControllers.add(new ChangeProfileScreenLockPreferenceController(
-                context, host, profileId));
-        profileSecurityControllers.add(new LockUnificationPreferenceController(
-                context, host, profileId));
+                context, host));
+        profileSecurityControllers.add(new LockUnificationPreferenceController(context, host));
         profileSecurityControllers.add(new VisiblePatternProfilePreferenceController(
-                context, lifecycle, profileId));
+                context, lifecycle));
         profileSecurityControllers.add(new FaceProfileStatusPreferenceController(
-                context, lifecycle, profileId));
+                context, lifecycle));
         profileSecurityControllers.add(new FingerprintProfileStatusPreferenceController(
-                context, lifecycle, profileId));
+                context, lifecycle));
         profileSecurityControllers
-                .add(new CombinedBiometricProfileStatusPreferenceController(
-                        context, lifecycle, profileId));
+                .add(new CombinedBiometricProfileStatusPreferenceController(context, lifecycle));
         controllers.add(new PreferenceCategoryController(context, WORK_PROFILE_SECURITY_CATEGORY)
                 .setChildren(profileSecurityControllers));
         controllers.addAll(profileSecurityControllers);
diff --git a/src/com/android/settings/security/VisiblePatternProfilePreferenceController.java b/src/com/android/settings/security/VisiblePatternProfilePreferenceController.java
index 4c823a32c1..4d65ae75fe 100644
--- a/src/com/android/settings/security/VisiblePatternProfilePreferenceController.java
+++ b/src/com/android/settings/security/VisiblePatternProfilePreferenceController.java
@@ -52,25 +52,24 @@ public class VisiblePatternProfilePreferenceController extends TogglePreferenceC
 
     private Preference mPreference;
 
-    public VisiblePatternProfilePreferenceController(Context context, int profileChallengeUserId) {
-        this(context, null /* lifecycle */, profileChallengeUserId);
+    public VisiblePatternProfilePreferenceController(Context context) {
+        this(context, null /* lifecycle */);
     }
 
-    public VisiblePatternProfilePreferenceController(
-            Context context, Lifecycle lifecycle, int profileChallengeUserId) {
-        this(context, lifecycle, KEY_VISIBLE_PATTERN_PROFILE, profileChallengeUserId);
+    public VisiblePatternProfilePreferenceController(Context context, Lifecycle lifecycle) {
+        this(context, lifecycle, KEY_VISIBLE_PATTERN_PROFILE);
     }
 
 
     // TODO (b/73074893) Replace this constructor without Lifecycle using setter method instead.
     public VisiblePatternProfilePreferenceController(
-            Context context, Lifecycle lifecycle, String key, int profileChallengeUserId) {
+            Context context, Lifecycle lifecycle, String key) {
         super(context, key);
         mUm = (UserManager) context.getSystemService(Context.USER_SERVICE);
         mLockPatternUtils = FeatureFactory.getFactory(context)
                 .getSecurityFeatureProvider()
                 .getLockPatternUtils(context);
-        mProfileChallengeUserId = profileChallengeUserId;
+        mProfileChallengeUserId = Utils.getManagedProfileId(mUm, mUserId);
         if (lifecycle != null) {
             lifecycle.addObserver(this);
         }
diff --git a/tests/robotests/src/com/android/settings/biometrics/fingerprint/FingerprintProfileStatusPreferenceControllerTest.java b/tests/robotests/src/com/android/settings/biometrics/fingerprint/FingerprintProfileStatusPreferenceControllerTest.java
index 446ea0aff2..efcba9d958 100644
--- a/tests/robotests/src/com/android/settings/biometrics/fingerprint/FingerprintProfileStatusPreferenceControllerTest.java
+++ b/tests/robotests/src/com/android/settings/biometrics/fingerprint/FingerprintProfileStatusPreferenceControllerTest.java
@@ -72,8 +72,7 @@ public class FingerprintProfileStatusPreferenceControllerTest {
         when(mFeatureFactory.securityFeatureProvider.getLockPatternUtils(mContext))
                 .thenReturn(mLockPatternUtils);
         when(mUm.getProfileIdsWithDisabled(anyInt())).thenReturn(new int[] {1234});
-        mController = new FingerprintProfileStatusPreferenceController(
-                mContext, TEST_PREF_KEY, FAKE_PROFILE_USER_ID);
+        mController = new FingerprintProfileStatusPreferenceController(mContext, TEST_PREF_KEY);
     }
 
     @Test
@@ -83,16 +82,14 @@ public class FingerprintProfileStatusPreferenceControllerTest {
 
     @Test
     public void getPreferenceKey_byDefault_returnsDefaultValue() {
-        mController = new FingerprintProfileStatusPreferenceController(
-                mContext, FAKE_PROFILE_USER_ID);
+        mController = new FingerprintProfileStatusPreferenceController(mContext);
 
         assertThat(mController.getPreferenceKey()).isEqualTo("fingerprint_settings_profile");
     }
 
     @Test
     public void getPreferenceKey_whenGivenValue_returnsGivenValue() {
-        mController = new FingerprintProfileStatusPreferenceController(
-                mContext, "key", FAKE_PROFILE_USER_ID);
+        mController = new FingerprintProfileStatusPreferenceController(mContext, "key");
 
         assertThat(mController.getPreferenceKey()).isEqualTo("key");
     }
diff --git a/tests/robotests/src/com/android/settings/security/LockUnificationPreferenceControllerTest.java b/tests/robotests/src/com/android/settings/security/LockUnificationPreferenceControllerTest.java
index 4ed18e5e4b..123bf34657 100644
--- a/tests/robotests/src/com/android/settings/security/LockUnificationPreferenceControllerTest.java
+++ b/tests/robotests/src/com/android/settings/security/LockUnificationPreferenceControllerTest.java
@@ -70,8 +70,7 @@ public class LockUnificationPreferenceControllerTest {
     }
 
     private void init() {
-        mController = new LockUnificationPreferenceController(
-                mContext, mHost, FAKE_PROFILE_USER_ID);
+        mController = new LockUnificationPreferenceController(mContext, mHost);
         when(mScreen.findPreference(mController.getPreferenceKey())).thenReturn(mPreference);
         mPreference = new Preference(mContext);
     }
@@ -93,8 +92,7 @@ public class LockUnificationPreferenceControllerTest {
 
     @Test
     public void getPreferenceKey_whenGivenValue_returnsGivenValue() {
-        mController = new LockUnificationPreferenceController(
-                mContext, mHost, "key", FAKE_PROFILE_USER_ID);
+        mController = new LockUnificationPreferenceController(mContext, mHost, "key");
 
         assertThat(mController.getPreferenceKey()).isEqualTo("key");
     }
diff --git a/tests/robotests/src/com/android/settings/security/VisiblePatternProfilePreferenceControllerTest.java b/tests/robotests/src/com/android/settings/security/VisiblePatternProfilePreferenceControllerTest.java
index 374e20aeb6..11d7016579 100644
--- a/tests/robotests/src/com/android/settings/security/VisiblePatternProfilePreferenceControllerTest.java
+++ b/tests/robotests/src/com/android/settings/security/VisiblePatternProfilePreferenceControllerTest.java
@@ -86,8 +86,7 @@ public class VisiblePatternProfilePreferenceControllerTest {
 
         mLifecycleOwner = () -> mLifecycle;
         mLifecycle = new Lifecycle(mLifecycleOwner);
-        mController = new VisiblePatternProfilePreferenceController(
-                mContext, mLifecycle, FAKE_PROFILE_USER_ID);
+        mController = new VisiblePatternProfilePreferenceController(mContext, mLifecycle);
     }
 
     @Test
@@ -124,8 +123,7 @@ public class VisiblePatternProfilePreferenceControllerTest {
 
     @Test
     public void getPreferenceKey_whenGivenValue_returnsGivenValue() {
-        mController = new VisiblePatternProfilePreferenceController(
-                mContext, mLifecycle, "key", FAKE_PROFILE_USER_ID);
+        mController = new VisiblePatternProfilePreferenceController(mContext, mLifecycle, "key");
 
         assertThat(mController.getPreferenceKey()).isEqualTo("key");
     }
